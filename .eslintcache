[{"C:\\repos\\node-js\\nba21-frontend\\src\\index.js":"1","C:\\repos\\node-js\\nba21-frontend\\src\\App.js":"2","C:\\repos\\node-js\\nba21-frontend\\src\\reportWebVitals.js":"3","C:\\repos\\node-js\\nba21-frontend\\src\\Components\\PlayerCard.jsx":"4","C:\\repos\\node-js\\nba21-frontend\\src\\components\\PlayerCard.jsx":"5","C:\\repos\\node-js\\nba21-frontend\\src\\components\\SelectedPlayers.jsx":"6","C:\\repos\\node-js\\nba21-frontend\\src\\components\\SearchInput.jsx":"7","C:\\repos\\node-js\\nba21-frontend\\src\\config\\config.jsx":"8","C:\\repos\\node-js\\nba21-frontend\\src\\helpers\\consts.jsx":"9","C:\\repos\\node-js\\nba21-frontend\\src\\helpers\\utils.jsx":"10","C:\\repos\\node-js\\nba21-frontend\\src\\pages\\LoadingPage.jsx":"11","C:\\repos\\node-js\\nba21-frontend\\src\\pages\\ErrorPage.jsx":"12","C:\\repos\\node-js\\nba21-frontend\\src\\pages\\ThreePointsContest\\Settings.jsx":"13","C:\\repos\\node-js\\nba21-frontend\\src\\pages\\ThreePointsContest\\Game.jsx":"14","C:\\repos\\node-js\\nba21-frontend\\src\\pages\\LoginPage.jsx":"15","C:\\repos\\node-js\\nba21-frontend\\src\\helpers\\auth.jsx":"16","C:\\repos\\node-js\\nba21-frontend\\src\\components\\PrivateRoute.jsx":"17","C:\\repos\\node-js\\nba21-frontend\\src\\pages\\MainPage.jsx":"18","C:\\repos\\node-js\\nba21-frontend\\src\\pages\\Logout.jsx":"19","C:\\repos\\node-js\\nba21-frontend\\src\\components\\Header.jsx":"20","C:\\repos\\node-js\\nba21-frontend\\src\\components\\Logo.jsx":"21","C:\\repos\\node-js\\nba21-frontend\\src\\pages\\RegisterPage.jsx":"22","C:\\repos\\node-js\\nba21-frontend\\src\\components\\Card.jsx":"23","C:\\repos\\node-js\\nba21-frontend\\src\\pages\\OneOnOne\\OneOnOne.jsx":"24","C:\\repos\\node-js\\nba21-frontend\\src\\helpers\\api.js":"25","C:\\repos\\node-js\\nba21-frontend\\src\\pages\\Random\\Random.jsx":"26","C:\\repos\\node-js\\nba21-frontend\\src\\pages\\OneOnOne\\OneOnOneStats.jsx":"27","C:\\repos\\node-js\\nba21-frontend\\src\\components\\DropdownInput.jsx":"28","C:\\repos\\node-js\\nba21-frontend\\src\\components\\TextInput.jsx":"29","C:\\repos\\node-js\\nba21-frontend\\src\\helpers\\sort.js":"30","C:\\repos\\node-js\\nba21-frontend\\src\\components\\StatsTable.jsx":"31","C:\\repos\\node-js\\nba21-frontend\\src\\components\\ButtonInput.jsx":"32","C:\\repos\\node-js\\nba21-frontend\\src\\pages\\OneOnOne\\OneOnOneHelper.jsx":"33"},{"size":500,"mtime":1611066444967,"results":"34","hashOfConfig":"35"},{"size":1597,"mtime":1611949306129,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"35"},{"size":4146,"mtime":1610879431159,"results":"38","hashOfConfig":"39"},{"size":12450,"mtime":1612252298057,"results":"40","hashOfConfig":"35"},{"size":2407,"mtime":1612369713303,"results":"41","hashOfConfig":"35"},{"size":444,"mtime":1612191773746,"results":"42","hashOfConfig":"35"},{"size":250,"mtime":1612373391206,"results":"43","hashOfConfig":"35"},{"size":1639,"mtime":1612347573542,"results":"44","hashOfConfig":"35"},{"size":1761,"mtime":1612340896949,"results":"45","hashOfConfig":"35"},{"size":1625,"mtime":1612250646213,"results":"46","hashOfConfig":"35"},{"size":1671,"mtime":1612125570320,"results":"47","hashOfConfig":"35"},{"size":14012,"mtime":1612250646220,"results":"48","hashOfConfig":"35"},{"size":12038,"mtime":1612374363652,"results":"49","hashOfConfig":"35"},{"size":6412,"mtime":1612209861701,"results":"50","hashOfConfig":"35"},{"size":1137,"mtime":1611756653666,"results":"51","hashOfConfig":"35"},{"size":812,"mtime":1611756549159,"results":"52","hashOfConfig":"35"},{"size":4099,"mtime":1612208891093,"results":"53","hashOfConfig":"35"},{"size":358,"mtime":1611945156571,"results":"54","hashOfConfig":"35"},{"size":889,"mtime":1612209347931,"results":"55","hashOfConfig":"35"},{"size":392,"mtime":1612191953895,"results":"56","hashOfConfig":"35"},{"size":6956,"mtime":1612209861693,"results":"57","hashOfConfig":"35"},{"size":1069,"mtime":1612191534186,"results":"58","hashOfConfig":"35"},{"size":16389,"mtime":1612376050410,"results":"59","hashOfConfig":"35"},{"size":787,"mtime":1611756349508,"results":"60","hashOfConfig":"35"},{"size":11034,"mtime":1612374296624,"results":"61","hashOfConfig":"35"},{"size":13783,"mtime":1612373067497,"results":"62","hashOfConfig":"35"},{"size":2927,"mtime":1612211523937,"results":"63","hashOfConfig":"35"},{"size":944,"mtime":1612209429445,"results":"64","hashOfConfig":"35"},{"size":2773,"mtime":1612252161772,"results":"65","hashOfConfig":"35"},{"size":2423,"mtime":1612341143821,"results":"66","hashOfConfig":"35"},{"size":298,"mtime":1612372798942,"results":"67","hashOfConfig":"35"},{"size":9826,"mtime":1612376050420,"results":"68","hashOfConfig":"35"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"1hyybap",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"11jd8ip",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},"C:\\repos\\node-js\\nba21-frontend\\src\\index.js",[],[],"C:\\repos\\node-js\\nba21-frontend\\src\\App.js",[],"C:\\repos\\node-js\\nba21-frontend\\src\\reportWebVitals.js",[],"C:\\repos\\node-js\\nba21-frontend\\src\\Components\\PlayerCard.jsx",[],["138","139"],"C:\\repos\\node-js\\nba21-frontend\\src\\components\\PlayerCard.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\components\\SelectedPlayers.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\components\\SearchInput.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\config\\config.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\helpers\\consts.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\helpers\\utils.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\pages\\LoadingPage.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\pages\\ErrorPage.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\pages\\ThreePointsContest\\Settings.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\pages\\ThreePointsContest\\Game.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\pages\\LoginPage.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\helpers\\auth.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\components\\PrivateRoute.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\pages\\MainPage.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\pages\\Logout.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\components\\Header.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\components\\Logo.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\pages\\RegisterPage.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\components\\Card.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\pages\\OneOnOne\\OneOnOne.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\helpers\\api.js",[],"C:\\repos\\node-js\\nba21-frontend\\src\\pages\\Random\\Random.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\pages\\OneOnOne\\OneOnOneStats.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\components\\DropdownInput.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\components\\TextInput.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\helpers\\sort.js",[],"C:\\repos\\node-js\\nba21-frontend\\src\\components\\StatsTable.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\components\\ButtonInput.jsx",[],"C:\\repos\\node-js\\nba21-frontend\\src\\pages\\OneOnOne\\OneOnOneHelper.jsx",["140"],"import StatsTable from \"../../components/StatsTable\";\r\nimport {TOP_STATS_NUMBER} from \"../../helpers/consts\";\r\nimport {formatDate, isDefined} from \"../../helpers/utils\";\r\nimport React from \"react\";\r\n\r\nexport const statsStyle = {\r\n    margin: \"30px auto 20px\",\r\n    width: \"40%\",\r\n    minWidth: \"700px\",\r\n    backgroundColor: \"rgba(255,255,255,0.6)\",\r\n    padding: \"20px\",\r\n    border: \"1px solid #eaeaea\",\r\n    borderRadius: \"20px\",\r\n}\r\n\r\nexport function BuildStatsTable(general_stats, wrap) {\r\n\r\n    let general_stats_block = null;\r\n    if (general_stats['total_games'] > 0) {\r\n\r\n        const general_stats_lines = [];\r\n        const dtToday = formatDate(new Date());\r\n        const total_games_today = general_stats['total_games_per_day'][dtToday] || 0;\r\n        const total_points_today = general_stats['total_points_per_day'][dtToday] || 0;\r\n        general_stats_lines.push(`Total Games: ${general_stats['total_games']}`);\r\n        general_stats_lines.push(`Total Points: ${general_stats['total_points']}`);\r\n        general_stats_lines.push(`Total Games Today: ${total_games_today}`);\r\n        general_stats_lines.push(`Total Points Today: ${total_points_today}`);\r\n\r\n        const ppd = Object.keys(general_stats['total_points_per_day']).sort((a, b) => {\r\n            return general_stats['total_points_per_day'][b] - general_stats['total_points_per_day'][a];\r\n        });\r\n\r\n        const gpd = Object.keys(general_stats['total_games_per_day']).sort((a, b) => {\r\n            return general_stats['total_games_per_day'][b] - general_stats['total_games_per_day'][a];\r\n        });\r\n\r\n        general_stats_lines.push(\"----\");\r\n        general_stats_lines.push(`Days with most games:`);\r\n        if (gpd.length === 0) {\r\n            general_stats_lines.push('-');\r\n        }\r\n        for (let i = 0; i < gpd.length && i <= TOP_STATS_NUMBER - 1; i++) {\r\n            general_stats_lines.push(`${gpd[i]} - ${general_stats['total_games_per_day'][gpd[i]]}`);\r\n        }\r\n\r\n        general_stats_lines.push(\"----\");\r\n        general_stats_lines.push(`Days with most points:`);\r\n        if (ppd.length === 0) {\r\n            general_stats_lines.push('-');\r\n        }\r\n        for (let i = 0; i < ppd.length && i <= TOP_STATS_NUMBER - 1; i++) {\r\n            general_stats_lines.push(`${ppd[i]} - ${general_stats['total_points_per_day'][ppd[i]]}`);\r\n        }\r\n\r\n        general_stats_block = (\r\n            <StatsTable\r\n                title={\"One on One Stats\"}\r\n                description={general_stats_lines}\r\n                hidden={true}\r\n            />\r\n        );\r\n\r\n        if (wrap){\r\n            general_stats_block = (\r\n                <div className=\"ui link cards centered\" style={statsStyle}>\r\n                    {general_stats_block}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return general_stats_block;\r\n}\r\n\r\nexport function buildStatsInformation(player1, player2, stats, player_stats_values, matchups_values){\r\n\r\n    const noStats = { records: [], win_streak: 0, lose_streak: 0, max_lose_streak: 0, max_win_streak: 0, total_knockouts: 0, total_diff: 0, total_diff_per_game: 0, total_games:0, total_wins: 0, total_lost: 0, total_win_percents: \"\" };\r\n\r\n    const stats1 = isDefined(stats[player1.name]) ? stats[player1.name] : Object.assign({},noStats);\r\n    const stats2 = isDefined(stats[player2.name]) ? stats[player2.name] : Object.assign({},noStats);\r\n\r\n    const curr_stats = [];\r\n    const player_stats = [];\r\n\r\n    // stats counter\r\n    let met_each_other = 0;\r\n    let mutual_games_wins1 = 0;\r\n    let mutual_scored1 = 0;\r\n    let mutual_scored2 = 0;\r\n    let mutual_knockouts1 = 0;\r\n    let mutual_knockouts2 = 0;\r\n\r\n    const arr = (stats1.records.length > stats2.records.length) ? stats1.records : stats2.records; // in case one of them is empty\r\n\r\n    arr.forEach((record) => {\r\n        if ((record.player1_name === player1.name && record.player2_name === player2.name) || (record.player1_name === player2.name && record.player2_name === player1.name)) {\r\n\r\n            // met each other\r\n            met_each_other += 1;\r\n\r\n            if (record.player1_name === player1.name){\r\n\r\n                // total scored (for diff)\r\n                mutual_scored1 += record.score1;\r\n                mutual_scored2 += record.score2;\r\n\r\n                // counting player1 wins in these mutual games\r\n                if (record.score1 > record.score2) mutual_games_wins1+=1;\r\n\r\n                // knockouts\r\n                if (record.score1 === 0 && record.score2 > 0) mutual_knockouts2 += 1;\r\n                else if (record.score2 === 0 && record.score1 > 0) mutual_knockouts1 += 1;\r\n\r\n            } else if (record.player2_name === player1.name) {\r\n\r\n                // total scored (for diff)\r\n                mutual_scored1 += record.score2;\r\n                mutual_scored2 += record.score1;\r\n\r\n                // counting player1 wins in these mutual games\r\n                if (record.score2 > record.score1) mutual_games_wins1+=1;\r\n\r\n                // knockouts\r\n                if (record.score1 === 0 && record.score2 > 0) mutual_knockouts1 += 1;\r\n                else if (record.score2 === 0 && record.score1 > 0) mutual_knockouts2 += 1;\r\n            }\r\n        }\r\n    });\r\n\r\n    // met each other stat\r\n    if (met_each_other === 0) {\r\n        curr_stats.push(\"This is the first time these players meet each other.\");\r\n    } else {\r\n        const plural = (met_each_other > 1) ? \"s\" : \"\";\r\n\r\n        let mutual_games_wins2 = met_each_other - mutual_games_wins1;\r\n        if (player1.name === player2.name){\r\n            mutual_games_wins1 = met_each_other;\r\n            mutual_games_wins2 = met_each_other;\r\n        }\r\n\r\n        // matchups stats\r\n        curr_stats.push(`These players met each other ${met_each_other} time${plural}.`);\r\n        curr_stats.push(`Wins: ${mutual_games_wins1} - ${mutual_games_wins2}`);\r\n        curr_stats.push(`Total Scored: ${mutual_scored1} - ${mutual_scored2}`);\r\n        curr_stats.push(`Total Diff: ${Math.max(0,mutual_scored1-mutual_scored2)} - ${Math.max(0,mutual_scored2-mutual_scored1)}`);\r\n        curr_stats.push(`Knockouts: ${mutual_knockouts1} - ${mutual_knockouts2}`);\r\n\r\n        // matchups stats - table\r\n        // matchups_values['Total Previous Matchups'] = [met_each_other,met_each_other];\r\n        matchups_values['Wins'] = [mutual_games_wins1,mutual_games_wins2];\r\n        matchups_values['Total Scored'] = [mutual_scored1,mutual_scored2];\r\n        matchups_values['Total Diff'] = [Math.max(0,mutual_scored1-mutual_scored2), Math.max(0,mutual_scored2-mutual_scored1)];\r\n        matchups_values['Knockouts'] = [mutual_knockouts1, mutual_knockouts2];\r\n    }\r\n\r\n    // player stats\r\n    player_stats.push(`Total Played Games: ${stats1.total_games} - ${stats2.total_games}`);\r\n    player_stats.push(`Standing: ${stats1.total_wins}W ${stats1.total_lost}L ${(stats1.total_win_percents) ? '(' + stats1.total_win_percents + ')' : ''} - ${stats2.total_wins}W ${stats2.total_lost}L ${(stats2.total_win_percents) ? '(' + stats2.total_win_percents + ')' : ''}`);\r\n    player_stats.push(`Current Win Streak: ${stats1.win_streak} - ${stats2.win_streak}`);\r\n    player_stats.push(`Current Lose Streak: ${stats1.lose_streak} - ${stats2.lose_streak}`);\r\n    player_stats.push(`Best Win Streak: ${stats1.max_win_streak} - ${stats2.max_win_streak}`);\r\n    player_stats.push(`Worst Lose Streak: ${stats1.max_lose_streak} - ${stats2.max_lose_streak}`);\r\n    player_stats.push(`Total Knockouts: ${stats1.total_knockouts} - ${stats2.total_knockouts}`);\r\n    player_stats.push(`Total Diff: ${stats1.total_diff} / ${stats2.total_diff}`);\r\n    player_stats.push(`Total Diff Per Game: ${stats1.total_diff_per_game} / ${stats2.total_diff_per_game}`);\r\n\r\n    // player stats - table\r\n    player_stats_values['Total Played Games'] = [stats1.total_games, stats2.total_games];\r\n    player_stats_values['Standing'] = [`${stats1.total_wins}W ${stats1.total_lost}L ${(stats1.total_win_percents)}`, `${stats2.total_wins}W ${stats2.total_lost}L ${(stats2.total_win_percents)}`];\r\n    player_stats_values['Current Win Streak'] = [stats1.win_streak, stats2.win_streak];\r\n    player_stats_values['Current Lose Streak'] = [stats1.lose_streak, stats2.lose_streak];\r\n    player_stats_values['Best Win Streak'] = [stats1.max_win_streak, stats2.max_win_streak];\r\n    player_stats_values['Worst Lose Streak'] = [stats1.max_lose_streak, stats2.max_lose_streak];\r\n    player_stats_values['Total Knockouts'] = [stats1.total_knockouts, stats2.total_knockouts];\r\n    player_stats_values['Total Diff'] = [stats1.total_diff, stats2.total_diff];\r\n    player_stats_values['Total Diff Per Game'] = [stats1.total_diff_per_game, stats2.total_diff_per_game];\r\n\r\n    // general stats\r\n    const general_stats = buildGeneralStats(stats);\r\n\r\n    return {curr_stats, player_stats, player_stats_values, matchups_values, met_each_other, general_stats};\r\n}\r\n\r\nexport function buildGeneralStats(stats) {\r\n    const general_stats = {\r\n        'total_games': 0,\r\n        'total_games_per_day': {},\r\n        'total_points': 0,\r\n        'total_points_per_day': {},\r\n    };\r\n    Object.keys(stats).forEach((player) => {\r\n        stats[player].records.forEach((record) => {\r\n            general_stats['total_games'] += 0.5;\r\n            general_stats['total_points'] += ((record.score1 + record.score2)/2);\r\n            const dt = formatDate(new Date(record.addedAt));\r\n            general_stats['total_games_per_day'][dt] = general_stats['total_games_per_day'][dt] || 0;\r\n            general_stats['total_games_per_day'][dt] += 0.5;\r\n            general_stats['total_points_per_day'][dt] = general_stats['total_points_per_day'][dt] || 0;\r\n            general_stats['total_points_per_day'][dt] += ((record.score1 + record.score2)/2);\r\n        })\r\n    });\r\n\r\n    return general_stats;\r\n}\r\n",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":null,"fatal":true,"severity":2,"message":"145","line":210,"column":17},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"Parsing error: Unexpected token, expected \"=>\"\n\n  208 | \n  209 | \n> 210 | async replaceOne(idx){\n      |                 ^\n  211 |     let scores = {};\n  212 |     let scores_history = {};\n  213 |     let player1 = this.state.player1;","no-global-assign","no-unsafe-negation"]